name: E2E example web apps test with OP Sepolia

on:
  push:
    branches:
      - main
    # If any path names do not match patterns in paths-ignore,
    # even if some path names match the patterns,
    # the workflow will run.
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "book/**"
  pull_request:
  merge_group:
  workflow_dispatch:
concurrency:
  # Do not cancel jobs on main by forcing a unique group name.
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      code-changes: ${{ steps.filter.outputs.code-changes }}
      workflow-changes: ${{ steps.filter.outputs.workflow-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # We detect code changes, and run the workflow only if relevant code or workflow changes are detected.
      # Because the workflow is resource heavy (in time/compilation, in testnet ETH usage, and in Bonsai API usage),
      # we also skip running the workflow on every commit of PRs (unless the workflow configuration is changed)
      # Red PR cannot be merged because even though PR commits are skipped, the workflow will still run in the merge queue.
      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code-changes:
              - 'examples/**'
              - 'packages/**'
              - 'bash/run-services.sh'
              - 'bash/e2e-web-apps-test.sh'
              - 'contracts/**'
            workflow-changes:
              - '.github/workflows/test_e2e_web_apps_testnet.yaml'

  build-binaries:
    name: Build binaries
    needs: changes
    runs-on: aws-linux-medium
    if: github.event_name == 'push' || needs.changes.outputs.workflow-changes == 'true' || (github.event_name != 'pull_request' && needs.changes.outputs.code-changes == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites

      - name: Install Risc0 prerequisites
        uses: ./.github/actions/risc0

      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites

      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Install contracts' dependencies
        working-directory: ./contracts/vlayer
        run: forge soldeer install

      - name: Create reusable Cargo target dir
        id: cargo_target
        uses: ./.github/actions/reuse-cargo-target
        with:
          targets_path: ${{ vars.VLAYER_CARGO_TARGET_DIRS }}
          target_name: test-e2e-web-apps-opsepolia
      - name: Build binaries
        env:
          CARGO_TARGET_DIR: ${{ steps.cargo_target.outputs.CARGO_TARGET_DIR }}
          RISC0_USE_DOCKER: 1
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
        run: |
          cargo build --bin call_server --bin chain_server --bin worker --bin dns_server
          mkdir target_debug
          mv ${CARGO_TARGET_DIR}/debug/{call_server,chain_server,worker,dns_server} target_debug/

      - name: Push binaries
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: target-debug
          path: target_debug
          if-no-files-found: error
          retention-days: 3

  test-e2e-web-apps-simple-email-proof:
    name: E2E web apps test (simple-email-proof) with OP Sepolia
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: github.event_name == 'push' || needs.changes.outputs.workflow-changes == 'true' || (github.event_name != 'pull_request' && needs.changes.outputs.code-changes == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run E2E Web Apps Test Action
        uses: ./.github/actions/test-e2e-web-apps-opsepolia
        with:
          example: "simple-email-proof"
          vercel_project_id: ${{ secrets.VERCEL_PLAYWRIGHT_REPORT_PROJECT_ID }}
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}

  test-e2e-web-apps-opsepolia-simple-time-travel:
    name: E2E web apps test (simple-time-travel) with OP Sepolia
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: github.event_name == 'push' || needs.changes.outputs.workflow-changes == 'true' || (github.event_name != 'pull_request' && needs.changes.outputs.code-changes == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run E2E Web Apps Test Action
        uses: ./.github/actions/test-e2e-web-apps-opsepolia
        with:
          example: "simple-time-travel"
          vercel_project_id: ${{ secrets.VERCEL_PLAYWRIGHT_REPORT_PROJECT_ID }}
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}
