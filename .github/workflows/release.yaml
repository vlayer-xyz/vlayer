name: Release binaries
on: 
  push:
    branches:
      fix-releases
  schedule:
    - cron: '0 22 * * 1-5' # Mon-Fri at 22:00 UTC


jobs:
  build-release:
    defaults:
      run:
        working-directory: rust
    name: Release nightly for ${{ matrix.platform }} ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 30 
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            platform: linux
            arch: amd64
            runner: ubuntu-latest
          - target: aarch64-apple-darwin
            platform: darwin
            arch: arm64
            runner: macos-latest

    steps:
      - uses: cargo-bins/cargo-binstall@main

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-workspaces: rust

      - name: Install risc0 instaler
        run: cargo binstall -y cargo-risczero --force

      - name: Install risc0 toolchain
        run: cargo risczero install

      - name: "Build binaries"
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package release
        id: package-release
        env:
          OUTPUT_FILE_SUFFIX: "${{ matrix.platform }}-${{ matrix.arch }}.tar.gz"
        run: |
          bins=(vlayer)
          mkdir -p target/${{ matrix.target }}/bin
          cd target/${{ matrix.target }}

          for name in "${bins[@]}" ; do
            mv "release/${name}" bin/
          done

          tar -czvf "nightly-${OUTPUT_FILE_SUFFIX}" bin
          echo "output_file=rust/target/${{ matrix.target }}/nightly-${OUTPUT_FILE_SUFFIX}" >> $GITHUB_OUTPUT
          echo "output_file_suffix=${OUTPUT_FILE_SUFFIX}" >> $GITHUB_OUTPUT

      - name: Push artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ steps.package-release.outputs.output_file }}


  create-release:
    name: Create GH releases
    runs-on: ubuntu-latest
    needs: build-release 
    steps:
      - run: mkdir -p dist
      - uses: actions/download-artifact@v4
        with:
          path: ./dist
          merge-multiple: true

      - name: Release tagged nightly
        uses: ncipollo/release-action@v1
        with:
          tag: nightly-${{ github.sha }}
          artifacts: "./dist/*"

      - name: Release nightly-latest
        uses: ncipollo/release-action@v1
        with:
          tag: nightly-latest
          makeLatest: true
          allowUpdates: true
          artifacts: "./dist/*"

  push-artifacts-to-s3:
    name: Push artifacts to AWS S3
    runs-on: ubuntu-latest
    needs: build-release 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - run: mkdir -p dist/latest
      - uses: actions/download-artifact@v4
        with:
          path: ./dist/latest
          merge-multiple: true
      - run: cp -r "./dist/latest" "./dist/${{ github.sha }}"

      - name: Push tagged binaries to AWS S3
        uses: mostlytyped/s3-put-action@v1.0.0
        with:
          args: --recursive
        env:
          AWS_ENDPOINT: ${{ vars.AWS_ENDPOINT }}
          AWS_BUCKET: ${{ vars.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          LOCAL_FILE: ./dist/${{ github.sha }}
          REMOTE_FILE: "" 

      - name: Push latest binaries to AWS S3
        uses: mostlytyped/s3-put-action@v1.0.0
        with:
          args: --recursive
        env:
          AWS_ENDPOINT: ${{ vars.AWS_ENDPOINT }}
          AWS_BUCKET: ${{ vars.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          LOCAL_FILE: ./dist/latest
          REMOTE_FILE: "" 

      - name: Push vlayerup scripts to AWS S3
        uses: mostlytyped/s3-put-action@v1.0.0
        with:
          args: --recursive
        env:
          AWS_ENDPOINT: ${{ vars.AWS_ENDPOINT }}
          AWS_BUCKET: ${{ vars.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          LOCAL_FILE: ./bash/vlayerup
          REMOTE_FILE: "" 
