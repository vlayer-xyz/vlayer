name: E2E test against devnet

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      rust: ${{ steps.filter.outputs.rust || 'false' }}
      ts: ${{ steps.filter.outputs.ts || 'false' }}
      contracts: ${{ steps.filter.outputs.contracts || 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            rust:
              - '**/*.rs'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - '.github/actions/rust-prerequisites/**'
            ts:
              - '**/*.ts'
              - '**/*.tsx'
              - 'bash/lint-ts.sh'
              - 'bash/build-ts-types.sh'
              - '.github/actions/ts-prerequisites/**'
            contracts:
              - 'contracts/**'
              - 'bash/mock-imageid.sh'
              - 'forge.toml'
              - '.github/actions/contracts-prerequisites/**'

  build-binaries:
    name: Build binaries
    needs: changes
    if: needs.changes.outputs.rust == 'true' || needs.changes.outputs.contracts == 'true' || needs.changes.outputs.ts == 'true'
    runs-on: aws-linux-medium
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites
      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites

      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Install contracts' dependencies
        working-directory: ./contracts/vlayer
        run: forge soldeer install

      - name: Build binaries
        env:
          RISC0_USE_DOCKER: 1
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
        run: |
          cargo build --bin vlayer --bin call_server --bin chain_server --bin worker --bin dns_server
          mkdir target_debug
          mv target/debug/{vlayer,call_server,chain_server,worker,dns_server} target_debug/

      - name: Push binaries
        uses: actions/upload-artifact@v4
        with:
          name: target-debug
          path: target_debug
          if-no-files-found: error
          retention-days: 3

  test-e2e-devnet:
    name: E2E test against devnet
    needs: [changes, build-binaries]
    if: needs.changes.outputs.ts == 'true' || needs.changes.outputs.contracts == 'true' || needs.changes.outputs.rust == 'true'
    runs-on: aws-linux-medium
    strategy:
      fail-fast: false
      matrix:
        example:
          [
            "simple",
            "simple-web-proof",
            "simple-email-proof",
            "simple-teleport",
            "simple-time-travel",
          ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: target-debug
          path: target/debug
      - name: Make downloaded binaries executable
        run: sudo chmod +x target/debug/*
      - name: Install TypeScript prerequisites
        uses: ./.github/actions/ts-prerequisites
      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites
      - name: Mock ImageId.sol
        run: ./bash/mock-imageid.sh
      - name: Install contracts' dependencies
        working-directory: ./contracts/vlayer
        run: forge soldeer install

      - name: Run e2e test
        env:
          VLAYER_TMP_DIR: ./artifacts
          BUILD_BINARIES: 0
          EXAMPLE: ${{ matrix.example }}
        run: bash/e2e-test.sh

      # Teardown
      - name: Upload logs for previewing
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-devnet-${{ matrix.example }}
          path: ./artifacts/logs/
          if-no-files-found: error
          retention-days: 1
