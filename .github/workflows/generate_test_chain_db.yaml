name: Generate test chain database

# This workflow generates a chain DB which is used by worker migration tests.

on:
  push:
    branches:
      - main
    paths:
      - "rust/guest_wrapper/artifacts/chain_guest/elf_id"
  workflow_dispatch:

jobs:
  gen-test-chain-db:
    name: Generate test chain database
    runs-on: aws-linux-medium
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites

      - name: Install Risc0 prerequisites
        uses: ./.github/actions/risc0

      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites

      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Build chain worker
        env:
          RISC0_USE_DOCKER: 1
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
        run: cargo build --bin worker

      - name: Run chain worker (init DB)
        env:
          RPC_URL: "https://dry-alpha-tab.optimism-sepolia.quiknode.pro/${{ secrets.QUICKNODE_API_KEY }}"
          CHAIN_ID: 11155420
          PROOF_MODE: fake
          MODE: init
          DB_PATH: "./chain_db"
          START_BLOCK: 20000000
          MAX_BACK_PROPAGATION_BLOCKS: 1
          MAX_HEAD_BLOCKS: 1
          CONFIRMATIONS: 2
        run: ./target/debug/worker

      - name: Push db to AWS S3
        uses: mostlytyped/s3-put-action@v1.0.0
        with:
          args: --recursive
        env:
          AWS_ENDPOINT: ${{ vars.AWS_DEVELOPMENT_ENDPOINT }}
          AWS_BUCKET: ${{ vars.AWS_DEVELOPMENT_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_DEVELOPMENT_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEVELOPMENT_SECRET_ACCESS_KEY }}

          LOCAL_FILE: "./chain_db"
          REMOTE_FILE: ""

      # Make sure to clean up the database in case of permissions issue.
      - name: Cleanup
        if: always()
        run: |
          rm -rf ./chain_db
