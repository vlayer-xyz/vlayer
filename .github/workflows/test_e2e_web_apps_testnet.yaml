name: E2E test of example web apps on testnet

on:
  push:
    branches:
      - main
    # If any path names do not match patterns in paths-ignore,
    # even if some path names match the patterns,
    # the workflow will run.
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "book/**"
  pull_request:
  merge_group:
  workflow_dispatch:
concurrency:
  # Do not cancel jobs on main by forcing a unique group name.
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      code-changes: ${{ steps.filter.outputs.code-changes }}
      workflow-changes: ${{ steps.filter.outputs.workflow-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # We detect code changes, and run the workflow only if relevant code or workflow changes are detected.
      # Because the workflow is resource heavy (in time/compilation, in testnet ETH usage, and in Bonsai API usage),
      # we also skip running the workflow on every commit of PRs (unless the workflow configuration is changed)
      # Red PR cannot be merged because even though PR commits are skipped, the workflow will still run in the merge queue.
      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code-changes:
              - 'examples/**'
              - 'packages/**'
              - 'bash/run-services.sh'
              - 'bash/e2e-web-apps-test.sh'
              - 'bash/e2e-web-apps-tests.sh'
              - 'contracts/**'
            workflow-changes:
              - '.github/workflows/test_e2e_web_apps_testnet.yaml'

  test-e2e-web-apps:
    name: E2E web apps test against testnet
    needs: changes
    runs-on: aws-linux-medium
    if: github.event_name == 'push' || needs.changes.outputs.workflow-changes == 'true' || (github.event_name != 'pull_request' && needs.changes.outputs.code-changes == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run E2E Web Apps Test Action
        uses: ./.github/actions/run-e2e-test
        with:
          example: your-example-name
          playwright_test_x_com_auth_token: ${{ secrets.PLAYWRIGHT_TEST_X_COM_AUTH_TOKEN }}
          vercel_project_id: ${{ secrets.VERCEL_PLAYWRIGHT_REPORT_PROJECT_ID }}
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          gas_meter_url: ${{ vars.GAS_METER_URL }}
          gas_meter_api_key: ${{ secrets.GAS_METER_API_KEY }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}