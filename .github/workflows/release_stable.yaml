name: Release stable
on:
  push:
    branches:
      - main
    paths:
      - rust/version/Cargo.toml
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
jobs:
  check-if-needs-releasing:
    if: github.repository == 'vlayer-xyz/vlayer'
    runs-on: ubuntu-latest
    outputs:
      needs_releasing: ${{ steps.compare-versions.outputs.needs_releasing }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Fetch all tags
        run: git fetch --tags --force
      - name: Check local and latest stable version tag
        id: compare-versions
        run: |
          LOCAL_VERSION="v$(grep '^version' rust/version/Cargo.toml | awk -F' = ' '{print $2}' | tr -d '"')"
          LATEST_TAG=$(git tag --sort=-creatordate | grep '^v[0-9]' | head -n 1)
          echo "Local version is '${LOCAL_VERSION}'. Latest remote tag is '${LATEST_TAG}'"
          if [ "$LOCAL_VERSION" != "$LATEST_TAG" ]; then
            echo "needs_releasing=true" >> $GITHUB_OUTPUT
          else
            echo "needs_releasing=false" >> $GITHUB_OUTPUT
          fi

  verify-image-id-onchain:
    name: Verify image ID on mainnet chains
    needs: [check-if-needs-releasing]
    if: needs.check-if-needs-releasing.outputs.needs_releasing == 'true'
    runs-on: aws-linux-medium

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Verify image ID on mainnet chains
        uses: ./.github/actions/verify-image-id-onchain

  release:
    needs: [check-if-needs-releasing, verify-image-id-onchain]
    if: needs.check-if-needs-releasing.outputs.needs_releasing == 'true'
    uses: ./.github/workflows/release.yaml
    with:
      vlayer_release: stable
    secrets: inherit
