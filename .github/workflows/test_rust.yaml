name: Test Rust

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
concurrency:
  # Do not cancel jobs on main by forcing a unique group name.
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      relevant-changes: ${{ steps.filter.outputs.relevant-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            relevant-changes:
              - 'rust-toolchain.toml'
              - 'rust/**'
              - 'examples/**'
              - '.github/workflows/test_rust.yaml'

  test-rust:
    name: Test Rust
    needs: changes
    runs-on: aws-linux-medium
    if: github.event_name == 'push' || needs.changes.outputs.relevant-changes == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # Needed for restoring mtime
      # For more efficient Cargo target dir reuse
      - name: Restore timestamps
        uses: chetan/git-restore-mtime-action@26fb42a93ac0f66e9c0c5ad3bd03079cb9ee5300 # v2.1

      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites
      - name: Install Risc0 prerequisites
        uses: ./.github/actions/risc0
      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites
      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Create reusable Cargo target dir
        id: cargo_target
        uses: ./.github/actions/reuse-cargo-target
        with:
          targets_path: ${{ vars.VLAYER_CARGO_TARGET_DIRS }}
          target_name: test-rust-mtime
      - name: Run workspace rust tests
        run: |
          cargo test --workspace --locked --all-features --exclude web_prover
        env:
          CARGO_TARGET_DIR: ${{ steps.cargo_target.outputs.CARGO_TARGET_DIR }}
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
          RUST_LOG: info
