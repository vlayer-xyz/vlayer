name: E2E test against testnet

# This workflow has additional constraints to run on `main`,
# because it uses external API resources.

on:
  push:
    branches:
      - main
    # If any path names do not match patterns in paths-ignore,
    # even if some path names match the patterns,
    # the workflow will run.
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "book/**"
  pull_request:
  merge_group:
  workflow_dispatch:
concurrency:
  # Do not cancel jobs on main by forcing a unique group name.
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      relevant-changes: ${{ steps.filter.outputs.relevant-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            relevant-changes:
              - 'rust/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - 'bash/**'
              - 'contracts/**'
              - 'examples/**'
              - 'packages/**'
              - 'docker/**'
              - 'ansible/**'
              - 'bun.lock'
              - '.github/workflows/test_e2e_testnet.yaml'
              - '.github/actions/test-e2e-testnet/**'

  build-binaries:
    name: Build binaries
    needs: changes
    runs-on: aws-linux-medium
    if: needs.changes.outputs.relevant-changes == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites
      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites

      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Install contracts' dependencies
        working-directory: ./contracts/vlayer
        run: forge soldeer install

      - name: Build binaries
        env:
          RISC0_USE_DOCKER: 1
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
        run: |
          cargo build --bin vlayer --bin call_server --bin chain_server --bin worker --bin dns_server
          mkdir target_debug
          mv target/debug/{vlayer,call_server,chain_server,worker,dns_server} target_debug/

      - name: Push binaries
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: target-debug
          path: target_debug
          if-no-files-found: error
          retention-days: 3

  test-e2e-testnet-simple:
    name: E2E test against testnet (simple)
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: needs.changes.outputs.relevant-changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run E2E Test
        uses: ./.github/actions/test-e2e-testnet
        with:
          example: "simple"
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          bonsai_api_url: ${{ vars.BONSAI_API_URL }}
          bonsai_api_key: ${{ secrets.BONSAI_API_KEY }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          gas_meter_url: ${{ vars.GAS_METER_URL }}
          gas_meter_api_key: ${{ secrets.GAS_METER_API_KEY }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}

  test-e2e-testnet-simple-web-proof:
    name: E2E test against testnet (simple-web-proof)
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: needs.changes.outputs.relevant-changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run E2E Test
        uses: ./.github/actions/test-e2e-testnet
        with:
          example: "simple-web-proof"
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          bonsai_api_url: ${{ vars.BONSAI_API_URL }}
          bonsai_api_key: ${{ secrets.BONSAI_API_KEY }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          gas_meter_url: ${{ vars.GAS_METER_URL }}
          gas_meter_api_key: ${{ secrets.GAS_METER_API_KEY }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}

  test-e2e-testnet-simple-email-proof:
    name: E2E test against testnet (simple-email-proof)
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: needs.changes.outputs.relevant-changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run E2E Test
        uses: ./.github/actions/test-e2e-testnet
        with:
          example: "simple-email-proof"
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          bonsai_api_url: ${{ vars.BONSAI_API_URL }}
          bonsai_api_key: ${{ secrets.BONSAI_API_KEY }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          gas_meter_url: ${{ vars.GAS_METER_URL }}
          gas_meter_api_key: ${{ secrets.GAS_METER_API_KEY }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}

  test-e2e-testnet-simple-time-travel:
    name: E2E test against testnet (simple-time-travel)
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: needs.changes.outputs.relevant-changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run E2E Test
        uses: ./.github/actions/test-e2e-testnet
        with:
          example: "simple-time-travel"
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          bonsai_api_url: ${{ vars.BONSAI_API_URL }}
          bonsai_api_key: ${{ secrets.BONSAI_API_KEY }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          gas_meter_url: ${{ vars.GAS_METER_URL }}
          gas_meter_api_key: ${{ secrets.GAS_METER_API_KEY }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}

  test-e2e-testnet-simple-teleport:
    name: E2E test against testnet (simple-teleport)
    needs: [changes, build-binaries]
    runs-on: aws-linux-medium
    if: needs.changes.outputs.relevant-changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run E2E Test
        uses: ./.github/actions/test-e2e-testnet
        with:
          example: "simple-teleport"
          testnet_private_key_location: ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }}
          bonsai_api_url: ${{ vars.BONSAI_API_URL }}
          bonsai_api_key: ${{ secrets.BONSAI_API_KEY }}
          quicknode_api_key: ${{ secrets.QUICKNODE_API_KEY }}
          gas_meter_url: ${{ vars.GAS_METER_URL }}
          gas_meter_api_key: ${{ secrets.GAS_METER_API_KEY }}
          vlayer_api_token: ${{ secrets.VLAYER_API_TOKEN }}
