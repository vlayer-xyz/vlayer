name: E2E test against testnet

# This workflow has additional constraints to run on `main`,
# because it uses external API resources.

on:
  push:
    branches:
      - main
    # If any path names do not match patterns in paths-ignore,
    # even if some path names match the patterns,
    # the workflow will run.
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "book/**"
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-main
  cancel-in-progress: false

jobs:
  test-e2e-testnet:
    name: E2E test against testnet
    runs-on: aws-linux-medium
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites
      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites
      - name: Install TypeScript prerequisites
        uses: ./.github/actions/ts-prerequisites

      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Install contracts' dependencies
        working-directory: ./contracts/vlayer
        run: forge soldeer install

      - name: Build binaries
        run: cargo build --bin vlayer --bin call_server --bin chain_server --bin worker
      - name: Run e2e test in prod mode
        env:
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
          PROVING_MODE: "prod"
          BONSAI_API_URL: ${{ vars.BONSAI_API_URL }}
          BONSAI_API_KEY: ${{ secrets.BONSAI_API_KEY }}
          QUICKNODE_API_KEY: ${{ secrets.QUICKNODE_API_KEY }}
          QUICKNODE_ENDPOINT: "dry-alpha-tab"
          EXAMPLES_TEST_PRIVATE_KEY: ${{ secrets.EXAMPLES_TEST_PRIVATE_KEY }}
          VLAYER_ENV: testnet
          CHAIN_NAME: "optimismSepolia"
          JSON_RPC_URL: "https://dry-alpha-tab.optimism-sepolia.quiknode.pro/${{ secrets.QUICKNODE_API_KEY }}"
          PROVER_URL: http://127.0.0.1:3000
          VLAYER_TMP_DIR: ./artifacts
          RUN_CHAIN_SERVICES: 1
          BUILD_BINARIES: 0
          CONFIRMATIONS: 2
        run: bash/e2e-test.sh

      # Teardown
      - name: Display Logs
        if: always()
        run: |
          for log_file in $(find ./artifacts/logs -type f); do
            echo "=== Contents of $log_file ==="
            cat "$log_file"
            echo "============================="
          done
