name: E2E test against testnet

# This workflow has additional constraints to run on `main`,
# because it uses external API resources.

on:
  push:
    branches:
      - main
    # If any path names do not match patterns in paths-ignore,
    # even if some path names match the patterns,
    # the workflow will run.
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "book/**"
  pull_request:
  workflow_dispatch:
concurrency:
  # Do not cancel jobs on main by forcing a unique group name.
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  test-e2e-testnet:
    name: E2E test against testnet
    runs-on: aws-linux-medium
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust prerequisites
        id: rust_pre
        uses: ./.github/actions/rust-prerequisites
      - name: Install contracts prerequisites
        uses: ./.github/actions/contracts-prerequisites
      - name: Install TypeScript prerequisites
        uses: ./.github/actions/ts-prerequisites

      - name: Check clang and LLVM version
        env:
          EXPECTED_LLVM_VERSION: "18.1"
        run: bash/check-llvm-clang.sh

      - name: Install contracts' dependencies
        working-directory: ./contracts/vlayer
        run: forge soldeer install

      # Stateful GH Runners have a separate testnet private key on disk,
      # to allow concurrent runs of the workflow avoiding nonce issues.
      # Here we load the key into a variable from a location on disk.
      - name: Read testnet private key
        run: |
          EXAMPLES_TEST_PRIVATE_KEY=$(cat ${{ secrets.TESTNET_PRIVATE_KEY_LOCATION }})
          echo "::add-mask::$EXAMPLES_TEST_PRIVATE_KEY"
          echo "EXAMPLES_TEST_PRIVATE_KEY=${EXAMPLES_TEST_PRIVATE_KEY}" >> $GITHUB_ENV
      - name: Build binaries
        env:
          RISC0_USE_DOCKER: 1
          RUSTC_WRAPPER: ${{ steps.rust_pre.outputs.RUSTC_WRAPPER }}
        run: cargo build --bin vlayer --bin call_server --bin chain_server --bin worker --bin dns_server
      - name: Run e2e test in prod mode
        env:
          PROVING_MODE: "prod"
          BONSAI_API_URL: ${{ vars.BONSAI_API_URL }}
          BONSAI_API_KEY: ${{ secrets.BONSAI_API_KEY }}
          QUICKNODE_API_KEY: ${{ secrets.QUICKNODE_API_KEY }}
          QUICKNODE_ENDPOINT: "dry-alpha-tab"
          VLAYER_ENV: testnet
          CHAIN_NAME: "optimismSepolia"
          JSON_RPC_URL: "https://dry-alpha-tab.optimism-sepolia.quiknode.pro/${{ secrets.QUICKNODE_API_KEY }}"
          PROVER_URL: http://127.0.0.1:3000
          GAS_METER_URL: ${{ vars.GAS_METER_URL }}
          GAS_METER_API_KEY: ${{ secrets.GAS_METER_API_KEY }}
          VLAYER_API_TOKEN: ${{ secrets.VLAYER_API_TOKEN }}
          VLAYER_TMP_DIR: ./artifacts
          BUILD_BINARIES: 0
          CONFIRMATIONS: 2
        run: bash/e2e-test.sh

      # Teardown
      - name: Upload logs for previewing
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: logs
          path: ./artifacts/logs/
          if-no-files-found: error
          retention-days: 1
