[workspace]
resolver = "2"
members = [
    "block_header",
    "chain",
    "cli",
    "common",
    "email_proof",
    "host_utils",
    "key_value",
    "mpt",
    "provider",
    "server_utils",
    "services/call/engine",
    "services/call/guest",
    "services/call/guest_wrapper",
    "services/call/host",
    "services/call/server",
    "services/chain/block_trie",
    "services/chain/client",
    "services/chain/common",
    "services/chain/db",
    "services/chain/guest",
    "services/chain/guest_wrapper",
    "services/chain/host",
    "services/chain/server",
    "services/chain/test_utils",
    "services/chain/worker",
    "test_runner",
    "traits",
    "web_proof",
    "zkvm-benchmarks/benchmarks",
    "zkvm-benchmarks/common",
    "zkvm-benchmarks/runner",
]

[profile.release]
debug = 1
lto = true

[workspace.dependencies]
alloy-chains = "0.1.42"
alloy-dyn-abi = "=0.8.8"
alloy-json-abi = "=0.8.8"
alloy-primitives = { version = "=0.8.8", default-features = false, features = ["serde"] }
alloy-rlp = { version = "0.3.9", default-features = false }
alloy-rlp-derive = { version = "0.3.9", default-features = false }
alloy-sol-types = "=0.8.8"
alloy-trie = "=0.7.2"
anyhow = "1.0.91"
as-any = "0.3.1"
async-trait = "0.1.83"
auto_impl = "1.2.0"
axum = "0.7.7"
axum-jrpc = "0.7.1"
bincode = { version = "1.3.3", default-features = false }
bytes = "1.8.0"
clap = "4.5.20"
color-eyre = "0.6.3"
colored = "2.1.0"
comfy-table = "7.1.1"
ctor = "0.2.8"
delegate = "0.13.1"
derive_more = { version = "1.0.0", features = ["debug", "into", "from", "into_iterator", "deref"] }
derive-new = "0.7.0"
derivative = "2.2.0"
dotenvy = "0.15.7"
dyn-clone = "1.0.17"
ethers = "2.0"
ethers-core = { version = "2.0", default-features = false }
ethers-providers = "2.0"
flate2 = "1.0.34"
forge = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c", default-features = false }
foundry-cheatcodes = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c" }
foundry-cli = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c", default-features = false }
foundry-common = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c" }
foundry-compilers = { version = "0.11.6", default-features = false }
foundry-config = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c", default-features = false }
foundry-debugger = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c" }
foundry-evm = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c" }
foundry-evm-core = { git = "https://github.com/foundry-rs/foundry", rev = "3b2e57a2907657ba666034c2b6fd33dea8b6566c" }
futures = { version = "0.3.31", default-features = false }
hex = "0.4.3"
http-body-util = "0.1.2"
httparse = "1.9.5"
itertools = { version = "0.13.0" }
lazy_static = "1.5.0"
mime = "0.3.17"
mockito = "1.5.0"
nybbles = "0.2.1"
once_cell = "1.20"
p256 = { version = "0.13.2", features = ["ecdsa"] }
parking_lot = "0.12.3"
pkcs8 = "0.10.2"
rand = "0.8.5"
rayon = "1.10.0"
regex = "1.11.1"
reqwest = { version = "0.12.8", default-features = false }
revm = { version = "=14.0.3", default-features = false, features = ["optimism"] }
risc0-build = "=1.0.5"
risc0-build-ethereum = "=1.0.0"
risc0-zkp = { version = "1.1.2", default-features = false }
risc0-zkvm = "=1.0.5"
rlp = "0.6.1"
serde = { version = "1.0.213", features = ["derive"] }
serde_json = "1.0.132"
tar = "0.4.42"
tempfile = "3.13.0"
test-log = "0.2.16"
thiserror = "1.0.65"
tlsn-core = { git = "https://github.com/tlsnotary/tlsn.git", tag = "v0.1.0-alpha.6" }
tokio = { version = "1.41.0", default-features = false, features = ["rt-multi-thread"] }
toml = "0.8.19"
tower = "0.5.1"
tower-http = "0.6.1"
tower-request-id = "0.3.0"
tracing = { version = "0.1", default-features = false }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"], default-features = false }
url = { version = "2.5", default-features = false }
vergen-gitcl = { version = "1.0.1", default-features = false }

block_header = { path = "block_header" }
block_trie = { path = "services/chain/block_trie" }
call_engine = { path = "services/call/engine" }
call_guest = { path = "services/call/guest" }
call_guest_wrapper = { path = "services/call/guest_wrapper" }
call_host = { path = "services/call/host" }
call_server = { path = "services/call/server" }
chain = { path = "chain" }
chain_client = { path = "services/chain/client" }
chain_db = { path = "services/chain/db" }
chain_guest = { path = "services/chain/guest" }
chain_guest_wrapper = { path = "services/chain/guest_wrapper" }
chain_host = { path = "services/chain/host" }
chain_server = { path = "services/chain/server" }
chain_common = { path = "services/chain/common" }
chain_test_utils = { path = "services/chain/test_utils" }
chain_worker = { path = "services/chain/worker" }
common = { path = "common" }
email_proof = { path = "email_proof" }
host_utils = { path = "host_utils" }
key_value = { path = "key_value" }
mpt = { path = "mpt" }
provider = { path = "provider" }
server_utils = { path = "server_utils" }
test_runner = { path = "test_runner" }
traits = { path = "traits" }
web_proof = { path = "web_proof" }
zkvm-benchmarks = { path = "zkvm-benchmarks/benchmarks" }
zkvm-benchmarks-common = { path = "zkvm-benchmarks/common" }

[workspace.lints.clippy]
as_ptr_cast_mut = "warn"
assigning_clones = "warn"
cast_possible_truncation = "warn"
cast_precision_loss = "warn"
dbg_macro = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
if_then_some_else_none = "warn"
inefficient_to_string = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
match_same_arms = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_pass_by_ref_mut = "warn"
needless_pass_by_value = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
type_repetition_in_bounds = "warn"
unneeded_field_pattern = "warn"
unused_async = "warn"
unused_peekable = "warn"
unused_self = "warn"
used_underscore_binding = "warn"
useless_let_if_seq = "warn"
missing_const_for_fn = "warn"
