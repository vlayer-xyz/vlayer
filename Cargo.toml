[workspace]
resolver = "2"
members = [
    "rust/block_header",
    "rust/chain",
    "rust/cli",
    "rust/common",
    "rust/email_proof",
    "rust/gas_price_checker",
    "rust/generate_fixtures",
    "rust/guest_wrapper",
    "rust/guest_wrapper/build_utils",
    "rust/host_utils",
    "rust/jwt",
    "rust/key_value",
    "rust/mpt",
    "rust/provider",
    "rust/range",
    "rust/server_utils",
    "rust/services/call/anchor_status",
    "rust/services/call/common",
    "rust/services/call/db",
    "rust/services/call/engine",
    "rust/services/call/guest",
    "rust/services/call/host",
    "rust/services/call/optimism",
    "rust/services/call/precompiles",
    "rust/services/call/rpc",
    "rust/services/call/seal",
    "rust/services/call/server",
    "rust/services/call/server_lib",
    "rust/services/chain/block_trie",
    "rust/services/chain/client",
    "rust/services/chain/common",
    "rust/services/chain/db",
    "rust/services/chain/guest",
    "rust/services/chain/host",
    "rust/services/chain/server",
    "rust/services/chain/server_lib",
    "rust/services/chain/status",
    "rust/services/chain/test_utils",
    "rust/services/chain/worker",
    "rust/services/dns/server",
    "rust/test_runner",
    "rust/verifiable_dns",
    "rust/version",
    "rust/web_proof",
    "rust/web_prover",
    "rust/zkvm-benchmarks/benchmarks",
    "rust/zkvm-benchmarks/runner",
]

[profile.release]
debug = "full"
lto = false # debug + LTO leads to ICE in 1.84: https://github.com/rust-lang/rust/issues/135332

[workspace.dependencies]
alloy-chains = "0.2.0"
alloy-dyn-abi = "=0.8.20"
alloy-eips = { version = "0.11.0", features = ["serde"] }
alloy-consensus = { version = "0.11.0", features = ["serde"] }
alloy-json-abi = "=0.8.20"
alloy-primitives = { version = "=0.8.20", default-features = false, features = ["serde", "tiny-keccak"] }
alloy-rlp = { version = "=0.3.11", default-features = false }
alloy-rlp-derive = { version = "=0.3.11", default-features = false }
alloy-serde = "0.11.0"
alloy-sol-types = "=0.8.20"
alloy-trie = "=0.7.8"
anyhow = "1.0.91"
as-any = "0.3.1"
assert_cmd = "2.0"
assert-json-diff = "2.0.2"
async-trait = "0.1.85"
auto_impl = "1.2.0"
axum = { version = "0.8.1", features = ["macros"] }
axum-extra = "0.10.0"
axum-jrpc = "0.8.0"
bincode = { version = "1.3.3", default-features = false }
bytemuck = "1.19.0"
bytes = "1.8.0"
chrono = "0.4.38"
chunked_transfer = "1.5.0"
clap = "4.5.26"
color-eyre = "0.6.3"
sha3 = "0.10.8"
colored = "3.0.0"
comfy-table = "7.1.1"
digest = "0.10.7"
cfg-if = "1.0.0"
criterion = "0.5.1"
constcat = "0.6.0"
ctor = "0.2.8"
dashmap = "6.1.0"
delegate = "0.13.1"
derive_builder = "0.12"
derive_more = { version = "1.0.0", features = ["debug", "into", "from", "into_iterator", "deref"] }
derive-new = "0.7.0"
derivative = "2.2.0"
dotenvy = "0.15.7"
dyn-clone = "1.0.17"
ethers = "2.0"
ethers-core = { version = "2.0", default-features = false }
ethers-providers = "2.0"
eyre = "0.6.12"
sha2 = "0.10.8"
flate2 = "1.0.34"
forge = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa", default-features = false }
foundry-cli = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa", default-features = false }
foundry-common = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa" }
foundry-compilers = { version = "0.13.2", default-features = false }
foundry-config = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa", default-features = false }
foundry-debugger = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa" }
foundry-evm = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa" }
foundry-evm-core = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa" }
foundry-test-utils = { git = "https://github.com/foundry-rs/foundry", rev = "082104867cc0d587196eec715a75736d61dbd9fa" }
futures = { version = "0.3.31", default-features = false }
hex = "0.4.3"
hickory-resolver = "0.24.2"
humantime = "2.1.0"
http-body-util = "0.1.2"
httparse = "1.9.5"
http = "1.3.1"
hyper = "1.5.2"
indicatif = "0.17.8"
inferno = "0.12.1"
itertools = { version = "0.14.0" }
jmespath = { git = "https://github.com/vlayer-xyz/jmespath.rs", rev = "5e7070f563bd4a81f242d51b648f2c677898b75d" }
jsonrpsee = { version = "0.24.8", features = ["server-core", "macros", "http-client"] }
jsonwebtoken = { version = "9.3.1", features = ["use_pem"] }
lazy_static = "1.5.0"
libmdbx = "0.5.3"
mailparse = "0.15.0"
mime = "0.3.17"
mockito = "1.5.0"
notary-client = { git = "https://github.com/tlsnotary/tlsn.git", tag = "v0.1.0-alpha.10" }
nybbles = "0.2.1" # Locked because we need path encoding (see https://github.com/alloy-rs/nybbles/pull/12)
olpc-cjson = "0.1.4"
once_cell = "1.20"
opener = "0.7.2"
k256 = { version = "0.13.4", features = ["ecdsa"] }
parking_lot = "0.12.3"
pkcs8 = "0.10.2"
predicates = "3.1.3"
tabled = "0.17.0"
proptest = "1.5.0"
rand = "0.8.5"
rangeset = { version = "0.2.0" }
rayon = "1.10.0"
regex = "1.11.1"
reqwest = { version = "0.12.12", default-features = false }
revm = { version = "=19.4.0", default-features = false, features = ["optimism"] }
risc0-build = "=2.1.1"
risc0-build-ethereum = { git = "https://github.com/vlayer-xyz/risc0-ethereum.git", rev = "cf3d1381f076f1094455a0fc6ebd5bd172424d09" }
risc0-zkp = { version = "=2.0.1", default-features = false }
risc0-zkvm = "=2.0.2"
risc0-zkvm-platform = "=2.0.2"
bonsai-sdk = "=1.4.0"
rlp = "0.6.1"
rsa = "=0.9.6" # Locked because of RSA acceleration (see https://github.com/vlayer-xyz/vlayer/pull/1444)
semver = "1.0.24"
serde = { version = "1.0.213", features = ["derive"] }
serde_json = "1.0.135"
serde_repr = "0.1.19"
serde_urlencoded = "0.7.1"
serde_with = { version = "3.11.0", default-features = false }
serde_yml = { version = "0.0.12", default-features = false }
soldeer-commands = "0.5.2"
soldeer-core = { version = "0.5.2", default-features = false }
spansy = { git = "https://github.com/tlsnotary/tlsn-utils", rev = "6168663" }
static_assertions = "1.1.0"
strum = "0.26.3"
tar = "0.4.42"
tempfile = "3.15.0"
thousands = "0.2.0"
maplit = "1.0.2"
test-log = "0.2.16"
thiserror = "2.0.11"
insta = "1.42.0"
tlsn-common = { git = "https://github.com/tlsnotary/tlsn.git", tag = "v0.1.0-alpha.10" }
tlsn-core = { git = "https://github.com/tlsnotary/tlsn.git", tag = "v0.1.0-alpha.10" }
tlsn-prover = { git = "https://github.com/tlsnotary/tlsn.git", tag = "v0.1.0-alpha.10" }
tlsn-utils = { git = "https://github.com/tlsnotary/tlsn-utils", rev = "6168663" }
tokio = { version = "1.43.0", default-features = false, features = ["rt-multi-thread"] }
tokio-util = "0.7.13"
toml = "0.8.19"
tower = "0.5.2"
tower-http = "0.6.2"
tower-request-id = "0.3.0"
tracing = { version = "0.1", default-features = false }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"], default-features = false }
quick-junit = "0.5.0"
url = { version = "2.5", default-features = false }
urlpattern = "0.3.0"
vergen-gitcl = { version = "1.0.5", default-features = false }
yansi = "1.0.1"
hyper-util = "0.1.10"

block_header = { path = "rust/block_header" }
block_trie = { path = "rust/services/chain/block_trie" }
seal = { path = "rust/services/call/seal" }
call_common = { path = "rust/services/call/common" }
call_db = { path = "rust/services/call/db" }
call_precompiles = { path = "rust/services/call/precompiles" }
call_engine = { path = "rust/services/call/engine" }
call_guest = { path = "rust/services/call/guest" }
call_host = { path = "rust/services/call/host" }
call_rpc = { path = "rust/services/call/rpc" }
call_server = { path = "rust/services/call/server" }
call_server_lib = { path = "rust/services/call/server_lib" }
optimism = { path = "rust/services/call/optimism" }
chain = { path = "rust/chain" }
chain_client = { path = "rust/services/chain/client" }
chain_db = { path = "rust/services/chain/db" }
chain_guest = { path = "rust/services/chain/guest" }
chain_host = { path = "rust/services/chain/host" }
chain_server = { path = "rust/services/chain/server" }
chain_server_lib = { path = "rust/services/chain/server_lib" }
chain_common = { path = "rust/services/chain/common" }
chain_status = { path = "rust/services/chain/status" }
chain_test_utils = { path = "rust/services/chain/test_utils" }
chain_worker = { path = "rust/services/chain/worker" }
common = { path = "rust/common" }
email_proof = { path = "rust/email_proof" }
gas_price_checker = { path = "rust/gas_price_checker" }
guest_build_utils = { path = "rust/guest_wrapper/build_utils" }
guest_wrapper = { path = "rust/guest_wrapper" }
host_utils = { path = "rust/host_utils" }
jwt = { path = "rust/jwt" }
key_value = { path = "rust/key_value" }
mpt = { path = "rust/mpt" }
provider = { path = "rust/provider" }
server_utils = { path = "rust/server_utils" }
test_runner = { path = "rust/test_runner" }
u64_range = { path = "rust/range" }
verifiable_dns = { path = "rust/verifiable_dns", default-features = false }
version = { path = "rust/version" }
web_proof = { path = "rust/web_proof" }
web_prover = { path = "rust/web_prover" }
zkvm-benchmarks = { path = "rust/zkvm-benchmarks/benchmarks" }

[workspace.lints.clippy]
as_ptr_cast_mut = "warn"
assigning_clones = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_sign_loss = "warn"
dbg_macro = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
inefficient_to_string = "warn"
iter_filter_is_some = "warn"
large_digit_groups = "warn"
large_enum_variant = "warn"
large_futures = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
map_unwrap_or = "warn"
match_same_arms = "warn"
mismatching_type_param_order = "warn"
mut_mut = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_pass_by_ref_mut = "warn"
needless_pass_by_value = "warn"
option_as_ref_cloned = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_option_ref = "warn"
same_functions_in_if_condition = "warn"
should_panic_without_expect = "warn"
struct_field_names = "warn"
trivially_copy_pass_by_ref = "warn"
type_repetition_in_bounds = "warn"
unchecked_duration_subtraction = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_join = "warn"
unneeded_field_pattern = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unseparated_literal_suffix = "warn"
unused_async = "warn"
unused_peekable = "warn"
unused_self = "warn"
used_underscore_binding = "warn"
useless_let_if_seq = "warn"
missing_const_for_fn = "warn"
zero_sized_map_values = "warn"

expect_used = "deny"
unwrap_used = "deny"
panic = "deny"

[profile.dev.package] # https://insta.rs/docs/quickstart/#optional-faster-runs
insta = { opt-level = 3 }
similar = { opt-level = 3 }

[workspace.metadata.scripts]
lint = "bash/lint/rust.sh"
