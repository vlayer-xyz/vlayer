source "$(dirname "${BASH_SOURCE[0]}")/../lib/io"

function generate_ts_bindings() {
  echo "::group::Generating typescript bidings"
  silent_unless_fails ${VLAYER_HOME}/bash/build-ts-types.sh
  echo '::endgroup::Generating typescript bidings'
}

function build_sdk() {
  echo "::group::Building sdk"
  pushd "${VLAYER_HOME}/packages/sdk"
    silent_unless_fails bun run build
    silent_unless_fails bun install --frozen-lockfile
  popd
  echo '::endgroup::Building sdk'
}

function run_prover_script() {
  pushd vlayer
      silent_unless_fails bun install --frozen-lockfile
      bun run prove:"${VLAYER_ENV}"
  popd
}

function build_contracts() {
  forge soldeer install
  forge clean
  forge build
}

function run_example() {
  local name="$1"
  echo "::group::Running tests of: ${name}"
  silent_unless_fails build_contracts
  run_prover_script
}

function run_examples() {
  echo "::group::Running examples"
  for example in $(find ${VLAYER_HOME}/examples -type d -maxdepth 1 -mindepth 1) ; do
    export EXAMPLE_NAME=$(basename "${example}")

    echo Running services...
    source ${VLAYER_HOME}/bash/run-services.sh

    pushd "${example}"
      run_example "$example"
    popd

    cleanup
    rm -rf "${VLAYER_TMP_DIR}/chain_db"
  done
  echo '::endgroup::Running examples'
}