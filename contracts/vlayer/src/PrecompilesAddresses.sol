// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.21;

/// @notice Precompile addresses used by the VLayer runtime.
/// @dev All precompile addresses are generated by taking the first 18 bytes of
///      `keccak256("vlayer.precompiles")` and appending a unique 2-byte big-endian suffix.
///      The `PRECOMPILES` constant represents the base address (ending with 0x0100),
///      and other addresses are defined relative to it.
///      This address generation logic is implemented in the Rust macro `generate_precompile!`.
library Precompiles {
    /// @dev Base precompile prefix address: first 18 bytes of `keccak256("vlayer.precompiles")` + `0x0100`
    address public constant PRECOMPILES = 0x7eBd4FaE7a485A9D198C8c3b2e7c7F593A130100;
    address public constant VERIFY_AND_PARSE = address(uint160(PRECOMPILES) + 0);
    address public constant VERIFY_EMAIL = address(uint160(PRECOMPILES) + 1);
    address public constant JSON_GET_STRING = address(uint160(PRECOMPILES) + 2);
    address public constant JSON_GET_INT = address(uint160(PRECOMPILES) + 3);
    address public constant JSON_GET_BOOL = address(uint160(PRECOMPILES) + 4);
    address public constant JSON_GET_ARRAY_LENGTH = address(uint160(PRECOMPILES) + 5);
    address public constant REGEX_MATCH = address(uint160(PRECOMPILES) + 0x10);
    address public constant REGEX_CAPTURE = address(uint160(PRECOMPILES) + 0x11);
    address public constant URL_PATTERN_TEST = address(uint160(PRECOMPILES) + 0x20);
    address public constant IS_VLAYER_TEST = address(uint160(PRECOMPILES) + 0x1E);
}
